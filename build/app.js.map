{"version":3,"sources":["../server/src/app.js"],"names":["require","express","logger","bodyParser","Routes","sequelize","fileUpload","cors","config","router","userInfo","app","use","json","urlencoded","extended","get","req","res","send","port","process","env","PORT","listen","console","log","sync","then","emit","catch","err","error","module","exports"],"mappings":";;AAAAA,OAAO,CAAC,iBAAD,CAAP;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIK,SAAS,GAAGL,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAIM,UAAU,GAAGN,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAIO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAAlB;;eACiBA,OAAO,CAAC,QAAD,C;IAAlBQ,M,YAAAA,M;;AACN,IAAIC,MAAM,GAAGT,OAAO,CAAC,iBAAD,CAApB;;gBACmBA,OAAO,CAAC,IAAD,C;IAApBU,Q,aAAAA,Q,EACN;;;AAEAF,MAAM;AACN,IAAMG,GAAG,GAAGV,OAAO,EAAnB;AAEAU,GAAG,CAACC,GAAJ,CAAQV,MAAM,CAAC,KAAD,CAAd;AAEAS,GAAG,CAACC,GAAJ,CAAQT,UAAU,CAACU,IAAX,EAAR;AACAF,GAAG,CAACC,GAAJ,CACET,UAAU,CAACW,UAAX,CAAsB;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAtB,CADF;AAMAJ,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,0BAAT;AACD,CAFD;AAIAR,GAAG,CAACC,GAAJ,CAAQL,IAAI,EAAZ;AACAI,GAAG,CAACC,GAAJ,CAAQN,UAAU,EAAlB;AACAK,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBR,MAAnB,E,CACA;;AAIA,IAAMgB,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACCZ,GAAG,CAACa,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACvBK,EAAAA,OAAO,CAACC,GAAR,8CAAkDN,IAAlD;AACA,CAFA;AAIDf,SAAS,CACNsB,IADH,GAEGC,IAFH,CAEQ,YAAM;AACVH,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAf,EAAAA,GAAG,CAACa,MAAJ,CAAWH,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA6B,YAAM;AACjCZ,IAAAA,GAAG,CAACkB,IAAJ,CAAS,aAAT;AACD,GAFD;AAKD,CATH,EAYGC,KAZH,CAYS,UAAAC,GAAG,EAAI;AACZN,EAAAA,OAAO,CAACO,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD,CAdH;AAgBAE,MAAM,CAACC,OAAP,GAAiBvB,GAAjB","sourcesContent":["require(\"@babel/polyfill\");\nvar express = require(\"express\");\nvar logger = require(\"morgan\");\nvar bodyParser = require(\"body-parser\");\nvar Routes = require(\"./routes/routes\");\nvar sequelize = require(\"./db/db\");\nvar fileUpload = require(\"express-fileupload\");\nvar cors = require(\"cors\");\nvar { config } = require(\"dotenv\");\nvar router = require(\"./routes/routes\");\nvar { userInfo } = require(\"os\");\n//var swaggerDocument = require\"./swagger.json\";\n\nconfig();\nconst app = express();\n\napp.use(logger(\"dev\"));\n\napp.use(bodyParser.json());\napp.use(\n  bodyParser.urlencoded({\n    extended: false\n  })\n);\n\napp.get(\"/\", (req, res) => {\n  res.send(\"Welcome to My Food_App..\");\n});\n\napp.use(cors());\napp.use(fileUpload());\napp.use(\"/api/v1\", Routes);\n//app.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n\n\n\nconst port = process.env.PORT || 8000;\n app.listen(port, () => {\n console.log(`App started and listening on port: ${port}`);\n});\n\nsequelize\n  .sync()\n  .then(() => {\n    console.log(\"DB Connection has been established\");\n    app.listen(process.env.PORT, () => {\n      app.emit(\"dbConnected\");\n    }); \n   \n\n  })\n  \n  \n  .catch(err => {\n    console.error(\"Unable to connect to the database:\", err);    \n  });\n\nmodule.exports = app;\n"],"file":"app.js"}
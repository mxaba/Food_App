{"version":3,"sources":["../../server/src/test/order.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","app","get","end","err","res","have","status","body","be","a","assert","equal","data","name","price","id","post","property","put"],"mappings":"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","sourcesContent":["import chai, { expect, assert, use } from \"chai\";\nimport chaiHttp from \"chai-http\";\nimport app from \"../app\";\n\nchai.use(chaiHttp);\nchai.should();\n\ndescribe(\"Orders\", () => {\n  describe(\"GET Order\", () => {\n    it(\"should get all orders for the day\", done => {\n      chai\n        .request(app)\n        .get(\"/api/v1/orders\")\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a(\"object\");\n          assert.equal(res.body.data.name);\n          assert.equal(res.body.data.price);\n          done();\n        });\n    });\n\n    it(\"should GET a single order\", done => {\n      const id = 1;\n      chai\n        .request(app)\n        .get(`/api/v1/orders/${id}`)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.a(\"object\");\n          done();\n        });\n    });\n  });\n\n  describe(\"POST an order\", () => {\n    it(\"it should be able to POST an order from the users\", done => {\n      chai\n        .request(app)\n        .post(\"/api/v1/orders\")\n\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have.property(\"status\");\n          done();\n        });\n    });\n    it(\"should POST an Order for the day\", done => {\n      chai\n        .request(app)\n        .post(\"/api/v1/orders\")\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.be.a(\"object\");\n          assert.equal(res.body.data.name,);\n          assert.equal(res.body.data.price,);\n          done();\n        });\n    });\n  });\n\n  describe(\"PUT an Order\", () => {\n    it(\"should EDIT an order \", done => {\n      const id = 1;\n      chai\n        .request(app)\n        .put(`/api/v1/orders/${id}`)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a(\"object\");\n          assert.equal(res.body.data.name,);\n          assert.equal(res.body.data.price,);\n          done();\n        });\n    });\n  });\n});\n"],"file":"order.js"}
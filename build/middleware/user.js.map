{"version":3,"sources":["../../server/src/middleware/user.js"],"names":["Joi","require","UserMiddleware","req","res","next","schema","name","string","required","email","password","min","validate","body","status","json","message","String","details","type","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;IAEMC,c;;;;;;;;;;;;+CAC4BC,G,EAAKC,G,EAAKC,I;;;;;;;AAE1BC,gBAAAA,M,GAAS;AACXC,kBAAAA,IAAI,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb,EADK;AAEXC,kBAAAA,KAAK,EAAEV,GAAG,CAACQ,MAAJ,GACFE,KADE,GAEFD,QAFE,EAFI;AAKXE,kBAAAA,QAAQ,EAAEX,GAAG,CAACQ,MAAJ,GACLI,GADK,CACD,CADC,EAELH,QAFK;AALC,iB;;uBASTT,GAAG,CAACa,QAAJ,CAAaV,GAAG,CAACW,IAAjB,EAAuBR,MAAvB,C;;;AACND,gBAAAA,IAAI;iDACG,I;;;;;iDAEAD,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,kBAAAA,MAAM,EAAE,OADgB;AAExBE,kBAAAA,OAAO,EAAEC,MAAM,CAAC,YAAIC,OAAJ,CAAY,CAAZ,EAAeF,OAAhB,CAFS;AAGxBG,kBAAAA,IAAI,EAAE;AAHkB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;gDAQYjB,G,EAAKC,G,EAAKC,I;;;;;;;AAEvBC,gBAAAA,M,GAAS;AACXI,kBAAAA,KAAK,EAAEV,GAAG,CAACQ,MAAJ,GACFE,KADE,GAEFD,QAFE,EADI;AAIXE,kBAAAA,QAAQ,EAAEX,GAAG,CAACQ,MAAJ,GACLI,GADK,CACD,CADC,EAELH,QAFK;AAJC,iB;;uBAQTT,GAAG,CAACa,QAAJ,CAAaV,GAAG,CAACW,IAAjB,EAAuBR,MAAvB,C;;;AACND,gBAAAA,IAAI;kDACG,I;;;;;kDAEAD,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,kBAAAA,MAAM,EAAE,OADgB;AAExBE,kBAAAA,OAAO,EAAEC,MAAM,CAAC,aAAIC,OAAJ,CAAY,CAAZ,EAAeF,OAAhB,CAFS;AAGxBG,kBAAAA,IAAI,EAAE;AAHkB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;AASnBC,MAAM,CAACC,OAAP,GAAiBpB,cAAjB","sourcesContent":["var Joi = require('joi');\n\nclass UserMiddleware {\n    static async validateRegister(req, res, next) {\n        try {\n            const schema = {\n                name: Joi.string().required(),\n                email: Joi.string()\n                    .email()\n                    .required(),\n                password: Joi.string()\n                    .min(7)\n                    .required()\n            };\n            await Joi.validate(req.body, schema);\n            next();\n            return true;\n        } catch (err) {\n            return res.status(400).json({\n                status: 'error',\n                message: String(err.details[0].message),\n                type: 'validation'\n            });\n        }\n    }\n\n    static async validateLogin(req, res, next) {\n        try {\n            const schema = {\n                email: Joi.string()\n                    .email()\n                    .required(),\n                password: Joi.string()\n                    .min(7)\n                    .required()\n            };\n            await Joi.validate(req.body, schema);\n            next();\n            return true;\n        } catch (err) {\n            return res.status(400).json({\n                status: 'error',\n                message: String(err.details[0].message),\n                type: 'validation'\n            });\n        }\n    }\n}\n\nmodule.exports = UserMiddleware;\n"],"file":"user.js"}